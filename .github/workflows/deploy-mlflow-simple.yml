name: Deploy MLflow (Simple Alternative)

on:
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  EKS_CLUSTER_NAME: abalone-mlops

jobs:
  deploy-mlflow-simple:
    name: Deploy MLflow (Simple)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.TERRAFORM_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.TERRAFORM_AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Configure kubectl for EKS
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}
        kubectl cluster-info

    - name: Setup Terraform to get outputs
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0
        terraform_wrapper: false

    - name: Get Database Connection Details
      working-directory: ./infrastructure
      run: |
        terraform init \
          -backend-config="bucket=${{ secrets.S3_BUCKET_NAME }}" \
          -backend-config="key=terraform.tfstate" \
          -backend-config="region=${{ secrets.AWS_REGION }}"
        
        DB_ENDPOINT=$(terraform output -raw mlflow_db_endpoint)
        DB_HOST=$(echo $DB_ENDPOINT | cut -d':' -f1)
        DB_PASSWORD=$(terraform output -raw db_password)
        
        echo "DB_HOST=$DB_HOST" >> $GITHUB_ENV
        echo "::add-mask::$DB_PASSWORD"
        echo "DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV

    - name: Update MLflow Deployment with Database Details
      run: |
        echo "🔧 Updating MLflow deployment with database details..."
        
        # Replace placeholders in the deployment file
        sed -i "s/PASSWORD/${{ env.DB_PASSWORD }}/g" kubernetes/mlflow-deployment.yaml
        sed -i "s/DB_HOST/${{ env.DB_HOST }}/g" kubernetes/mlflow-deployment.yaml
        
        echo "✅ Database details updated"

    - name: Deploy MLflow
      run: |
        echo "🚀 Deploying MLflow using Kubernetes manifests..."
        
        kubectl apply -f kubernetes/mlflow-deployment.yaml
        
        echo "✅ MLflow deployed"

    - name: Wait for MLflow to be Ready
      run: |
        echo "⏳ Waiting for MLflow deployment to be ready..."
        kubectl rollout status deployment/mlflow -n mlflow --timeout=300s
        
        echo "✅ MLflow is ready"

    - name: Get MLflow Service Status
      run: |
        echo "📊 MLflow Service Status:"
        kubectl get svc mlflow -n mlflow
        
        echo ""
        echo "📦 MLflow Pod Status:"
        kubectl get pods -n mlflow
        
        echo ""
        echo "📋 MLflow Logs (last 20 lines):"
        kubectl logs -n mlflow deployment/mlflow --tail=20

    - name: Get MLflow URL
      run: |
        echo "🌐 Getting MLflow URL..."
        
        # Wait for LoadBalancer
        sleep 60
        
        MLFLOW_URL=$(kubectl get svc mlflow -n mlflow -o jsonpath='{.status.loadBalancer.ingress[0].hostname}' 2>/dev/null || echo "")
        
        if [ -z "$MLFLOW_URL" ]; then
          echo "⏳ LoadBalancer still provisioning. Current status:"
          kubectl get svc mlflow -n mlflow
          echo ""
          echo "📋 Get URL later with:"
          echo "kubectl get svc mlflow -n mlflow"
          echo ""
          echo "🎯 MLflow is deployed! URL will be ready in 2-3 minutes."
        else
          echo ""
          echo "🎉 MLflow deployed successfully!"
          echo "🌐 MLflow URL: http://$MLFLOW_URL"
          echo ""
          echo "📊 Access your MLflow UI at: http://$MLFLOW_URL"
        fi

    - name: Output Success
      run: |
        echo ""
        echo "✅ Simple MLflow deployment completed!"
        echo ""
        echo "🎯 Next Steps:"
        echo "1. Wait 2-3 minutes for LoadBalancer"
        echo "2. Get URL: kubectl get svc mlflow -n mlflow"
        echo "3. Add MLFLOW_TRACKING_URI to GitHub Secrets"
        echo "4. Test MLflow UI in browser" 